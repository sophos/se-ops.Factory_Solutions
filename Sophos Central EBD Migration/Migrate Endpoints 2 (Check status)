---
variables:
  - type: Credential
    name: sophosCentralCredential
    key: sophosCentralCredential
    required: true
    visible: true
    default: false
    allowed_types:
      - username_password
  - type: Boolean
    name: Debug
    key: debug
    value: true
    required: true
    visible: true
    default: false
  - type: Boolean
    name: Audit Mode
    key: auditMode
    value: true
    required: true
    visible: true
    default: true
    description: |-
      When enabled, any final action taken by the pipeline will not be run.

      This is primarily for proof of concept testing and development, but can be used for verification prior to a destructive action.

      Off by default
  - type: String
    name: Input generated from pipeline 1
    key: input
    required: false
    visible: true
    default: false
    value: |-
      [
        {
          "srcTenantID": "05779962-e855-41ae-9338-6cbf6a73a211",
          "dstTenantID": "85a183fe-b633-46b8-8d66-6394ba8a8590",
          "migrationID": "b0d31bcf-ca54-462c-80bc-38a2c4fffbad",
          "expiresAt": "2023-03-21T18:15:02.527Z[UTC]",
          "endpointList": "[{\"id\":\"f8e85b0a-ac85-4b5d-9409-d76923c7fb9f\",\"type\":\"computer\",\"tenant\":{\"id\":\"05779962-e855-41ae-9338-6cbf6a73a211\"},\"hostname\":\"SOPHOS03\"},{\"id\":\"c0c5ad21-9e19-4cec-86d3-0be06deb891d\",\"type\":\"computer\",\"tenant\":{\"id\":\"05779962-e855-41ae-9338-6cbf6a73a211\"},\"hostname\":\"SOPHOS02\"}]"
        }
      ]
steps:
  - id: p3
    name: '[Library] [Endpoint] Delete Device'
    type: pipeline
    depends:
      - file3
    properties:
      pipeline_id: 634ea47f0ad650a1e7ff9987
      pipeline_revision_id: 636022f1751bbd10d65cc439
      variables:
        jwtToken: '{|steps.p1.result.outputs.jwtToken|}'
        outputFile: sucessfulEndpoints.json
        debug: '{|vars.debug|}'
        auditMode: '{|vars.auditMode|}'
  - id: file1
    name: Add data to endpoint file
    type: file
    depends:
      - file2
    properties:
      path: sucessfulEndpoints.json
      content: '{|read_file(''sucessfulEndpoints.json'') + "{\"id\": \"" + each.item + "\",\"tenant\": {\"id\": \"" + vars.input | parse_json() | json_query(''[].srcTenantID'') + "\"},"+"\"hostname\": \"" + vars.endpointList | parse_json() | json_query(''[?id==`''+each.item+''`].hostname'') + "\"},"|}'
    each: '{|steps.p2.result.outputs.successfulEndpoints|}'
  - id: file2
    name: Initialize endpoint file
    type: file
    depends:
      - p2
    properties:
      path: sucessfulEndpoints.json
      content: '['
  - id: file3
    name: Complete endpoint file
    type: file
    depends:
      - file1
    properties:
      path: sucessfulEndpoints.json
      content: '{|(read_file(''sucessfulEndpoints.json'') +"EOF") | replace(",EOF","]")|}'
  - id: vars1
    name: Set endpointList variable from input
    type: set_variables
    depends: []
    properties:
      vars:
        - key: endpointList
          value: '{|''[{''+vars.input | parse_json() | json_query(''[].endpointList'') | dump | replace(''\\'','''') | replace(''['','''') | replace('']'','''') | replace(''\"{'','''') | replace(''}\"'','''') + ''}]''|}'
  - id: p1
    name: '[Library] Sophos Central Auth & whoami'
    type: pipeline
    depends:
      - vars1
    properties:
      pipeline_id: 63483c1040b902a78301ba6f
      pipeline_revision_id: latest_published
      variables:
        debug: '{|vars.debug|}'
        jwtToken: jwtToken
        SophosCentralCredential: '{|vars.sophosCentralCredential|}'
  - id: p2
    name: '[Library] [Endpoint] Migrate Endpoint 2'
    type: pipeline
    depends:
      - p1
    properties:
      pipeline_id: 6408ebcd85ed29b1f179d464
      pipeline_revision_id: latest_published
      variables:
        jwtToken: '{|steps.p1.result.outputs.jwtToken|}'
        outputFile: 'null'
        debug: '{|vars.debug|}'
        auditMode: '{|false|}'
        srcTenantID: '{|vars.input | parse_json | json_query(''[].srcTenantID'') | dump | replace("[","") | replace("]","") | replace("\"","")|}'
        dstTenantID: '{|vars.input | parse_json | json_query(''[].dstTenantID'') | dump | replace("[","") | replace("]","") | replace("\"","")|}'
        migrationID: '{|vars.input | parse_json | json_query(''[].migrationID'') | dump | replace("[","") | replace("]","") | replace("\"","")|}'
  - id: debug1
    name: DEBUG sucessfulEndpoints.json
    type: debug
    depends:
      - file3
    properties:
      message: '{|read_file(''sucessfulEndpoints.json'')|}'
  - id: debug2
    name: DEBUG srcTenantID
    type: debug
    depends:
      - file1
    properties:
      message: '{|vars.input | parse_json() | json_query(''[].srcTenantID'') | dump|}'
outputs:
  - key: apiStatus
    value: '{|steps.p3.result | json_query(''outputs.apiStatus | [].outputs.apiStatus'')|}'
  - key: apiSummary
    value: |-
      {|[
        {
        "Action": "Sucessfully migrated machines deleted" if vars.auditMode == false else "Deletion AUDIT MODE",
        "Migration ID": steps.p3.result.outputs.migrationID,
        "Total Successful": steps.p3.result | json_query('outputs.apiStatus | [].outputs.apiStatus | [?status == `200`] | length(@)'),
        "Total Failed": steps.p3.result | json_query('outputs.apiStatus | [].outputs.apiStatus | [?status != `200`] | length(@)'),
        "Systems with errors": steps.p3.result | json_query('outputs.apiStatus | [].outputs.apiStatus | [?status != `200`]')

        }
      ]|}
  - key: migrationStatus
    value: '{|steps.p2.result.outputs.fullResponse.items|}'
layout:
  elements:
    - id: p3
      position:
        x: -275
        'y': 205
      links:
        - sourceId: file3
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: file1
      position:
        x: -275
        'y': 45
      links:
        - sourceId: file2
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: file2
      position:
        x: -275
        'y': -35
      links:
        - sourceId: p2
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: file3
      position:
        x: -275
        'y': 125
      links:
        - sourceId: file1
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: vars1
      position:
        x: -275
        'y': -275
      links: []
    - id: p1
      position:
        x: -275
        'y': -195
      links:
        - sourceId: vars1
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: p2
      position:
        x: -275
        'y': -115
      links:
        - sourceId: p1
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: debug1
      position:
        x: -85
        'y': 125
      links:
        - sourceId: file3
          sourcePort: right
          targetPort: left
          vertices: []
    - id: debug2
      position:
        x: -85
        'y': 45
      links:
        - sourceId: file1
          sourcePort: right
          targetPort: left
          vertices: []
