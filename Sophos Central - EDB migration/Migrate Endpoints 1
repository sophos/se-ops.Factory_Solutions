---
variables:
  - type: Credential
    name: sophosCentralCredential
    key: sophosCentralCredential
    required: true
    visible: true
    default: false
    allowed_types:
      - username_password
    value: edb
  - type: Boolean
    name: Debug
    key: debug
    value: true
    required: true
    visible: true
    default: false
  - type: Boolean
    name: Audit Mode
    key: auditMode
    value: false
    required: true
    visible: true
    default: true
    description: |-
      When enabled, any final action taken by the pipeline will not be run.

      This is primarily for proof of concept testing and development, but can be used for verification prior to a destructive action.

      Off by default
  - type: String
    name: Source Tenant ID
    key: srcTenantID
    value: 05779962-e855-41ae-9338-6cbf6a73a211
    required: true
    visible: true
    default: true
    description: Source sub-estate/tenant ID to migrate endpoint(s) FROM
  - type: String
    name: Destination Tenant ID
    key: dstTenantID
    value: 85a183fe-b633-46b8-8d66-6394ba8a8590
    required: true
    visible: true
    default: true
    description: Destination sub-estate/tenant ID to migrate endpoint(s) TO
  - type: Number
    name: Number of Endpoints to Migrate
    key: numEndpointsToMigrate
    value: 3
    required: true
    visible: true
    default: true
    description: Randomly ordered quantity of endpoints to migrate from one tenant to another. (1-50 ONLY)
steps:
  - id: p1
    name: '[Library] Sophos Central Auth & whoami'
    type: pipeline
    depends: []
    properties:
      pipeline_id: 63cef472980e48b584748c5e
      pipeline_revision_id: latest
      variables:
        SophosCentralCredential: '{|vars.sophosCentralCredential|}'
        debug: '{|vars.debug|}'
        jwtToken: jwtToken
  - id: p2
    name: '[Library] Get endpoint data'
    type: pipeline
    depends:
      - p1
    properties:
      pipeline_id: 63cef472980e48b584748c5d
      pipeline_revision_id: latest
      variables:
        apiView: Basic
        jwtToken: '{|steps.p1.result.outputs.jwtToken|}'
        tenantID: '{|each.item.id|}'
        apiRegion: '{|each.item.apiRegion|}'
        outputFile: endpoints
        debug: '{|vars.debug|}'
    each: '{|read_file(''tenants.json'') | parse_json() | json_query(''[?id==`''+vars.srcTenantID+''`]'')|}'
  - id: p3
    name: '[Library] [Endpoint] Tamper ON'
    type: pipeline
    depends:
      - file1
    properties:
      pipeline_id: 63cef472980e48b584748c60
      pipeline_revision_id: latest
      variables:
        jwtToken: '{|steps.p1.result.outputs.jwtToken|}'
        outputFile: migrate.json
        debug: '{|vars.debug|}'
        auditMode: '{|vars.auditMode|}'
        dstTenantID: '{|vars.dstTenantID|}'
        srcTenantID: '{|vars.srcTenantID|}'
    ignore_errors: true
  - id: file1
    name: Write File migrate.json
    type: file
    depends:
      - p2
    properties:
      path: migrate.json
      content: '{|read_file(steps.p2.results | json_query(''[].outputs.outputFileList[0]'') | dump | replace(''['','''') | replace('']'','''') | replace(''"'','''')) | parse_json() | json_query(''[0:''+vars.numEndpointsToMigrate+'']'') | dump|}'
outputs:
  - key: apiStatus
    value: '{|steps.p3.result | json_query(''[].outputs.apiStatus | [].outputs.apiStatus'')|}'
  - key: apiSummary
    value: |-
      {|[
        {
        "Action": "Migration triggered" if vars.auditMode == false else "Migration AUDIT MODE",
        "Migration ID": steps.p3.result.outputs.migrationID
        }
      ]|}
  - key: endpointList
    value: '{|read_file(''migrate.json'')|}'
  - key: stageTwoInput
    value: |-
      {|[
        {
        "srcTenantID": vars.srcTenantID,
        "dstTenantID": vars.dstTenantID,
        "migrationID": steps.p3.result.outputs.migrationID,
        "endpointList": read_file('migrate.json') | replace('\"',"")
        }
      ]|}
layout:
  elements:
    - id: p1
      position:
        x: -275
        'y': -195
      links: []
    - id: p2
      position:
        x: -275
        'y': -115
      links:
        - sourceId: p1
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: p3
      position:
        x: -275
        'y': 45
      links:
        - sourceId: file1
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: file1
      position:
        x: -275
        'y': -35
      links:
        - sourceId: p2
          sourcePort: bottom
          targetPort: top
          vertices: []
