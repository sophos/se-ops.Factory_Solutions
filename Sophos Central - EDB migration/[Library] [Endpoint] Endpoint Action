---
variables:
  - type: String
    name: JWT Token
    key: jwtToken
    required: true
    visible: true
    default: false
    description: |-
      This is the access token required to query the Sophos Central API.

      This is acquired in the "Sophos Central Auth & whoami" pipeline "get_token" step and passed to this pipeline.
  - type: String
    name: Full URL
    key: fullUrl
    required: true
    visible: true
    default: false
    value: '{|read_file(''tenants.json'') | parse_json() | json_query(''[?id==`''+each.item.tenant.id+''`].apiRegion | [0]'')+"/endpoint/v1/endpoints/"+each.item.id+"/tamper-protection"|}'
  - type: String
    name: Tenant ID
    key: tenantID
    required: true
    visible: true
    default: false
    value: '{|each.item.tenant.id|}'
    description: 'Single Tenant ID sent from parent pipeline, used to take action via Sophos Central API.'
  - type: String
    name: Endpoint ID
    key: endpointID
    value: '{|each.item.id|}'
    required: true
    visible: true
    default: false
    description: 'Single Endpoint ID sent from parent pipeline, used to take action via Sophos Central API.'
  - type: String
    name: Host Name
    key: hostName
    value: '{|each.item.hostname|}'
    required: false
    visible: true
    default: false
    description: 'Single host name sent from parent pipeline, used to provide main pipeline output.'
  - type: String
    name: Tenant Name
    key: tenantName
    value: '{|read_file(''tenants.json'') | parse_json() | json_query(''[?id==`''+each.item.tenant.id+''`].tenantName | [0]'')|}'
    required: false
    visible: true
    default: false
    description: 'Single tenant name sent from parent pipeline, used to provide main pipeline output, if multi-tenant only.'
  - type: Number
    name: HTTP Success Code
    key: httpSuccessCode
    required: true
    visible: true
    default: false
    description: 'Depending on which Sophos Central API is used, the code which represents a successful result.'
  - type: String
    name: HTTP API Method
    key: httpApiMethod
    required: true
    visible: true
    default: false
    allowed_values:
      - GET
      - POST
      - PATCH
      - PUT
      - DELETE
    description: 'Depending on which Sophos Central API action to take, the method required.'
  - type: String
    name: HTTP API Body
    key: httpApiBody
    required: false
    visible: true
    default: false
    description: 'Depending on which Sophos Central API action to take, the body required.'
  - type: String
    name: Debug
    key: debug
    value: '{|vars.debug|}'
    required: true
    visible: true
    default: true
    description: 'Inherited from parent pipeline and If true, will enable debugs in this and all child pipelines for troubleshooting during runs.'
  - type: String
    name: Audit Mode
    key: auditMode
    value: '{|vars.auditMode|}'
    required: true
    visible: true
    default: true
    description: |-
      When enabled, any final action taken by the pipeline will not be run.

      This is primarily for proof of concept testing and development, but can be used for verification prior to a destructive action.

      Off by default
steps:
  - id: executeAction
    name: Take Action
    type: http
    depends:
      - START_dumpVars
    properties:
      url: '{|vars.fullUrl|}'
      method: '{|vars.httpApiMethod|}'
      validate_certs: true
      status_code: '{|vars.httpSuccessCode|}'
      timeout: 30
      headers: |-
        {|[
          {
            "key": "X-Tenant-ID",
            "value": vars.tenantID
          },
           {
            "key": "Authorization",
            "value": "Bearer " + credential(vars.jwtToken).token
          },
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          } if vars.httpApiBody is not empty
        ] | select()|}
      body: '{|vars.httpApiBody|}'
      response_type: json
    condition: '{|vars.auditMode == "false"|}'
  - id: END_dumpVars
    name: 'End [Endpoint Action]'
    type: debug
    depends:
      - vars1
    properties:
      message: '{|vars | dump(2)|}'
    condition: '{|vars.debug == "true"|}'
  - id: START_dumpVars
    name: 'Start [Endpoint Action]'
    type: debug
    depends: []
    properties:
      message: '{|vars | dump(2)|}'
    condition: '{|vars.debug == "true"|}'
  - id: vars1
    name: Set API Status
    type: set_variables
    depends:
      - executeAction
    properties:
      vars:
        - key: apiStatus
          value: |-
            {|{
              "hostName": vars.hostName,
              "tenantName": vars.undefined if vars.tenantName is null else vars.tenantName,
              "status": steps.executeAction.result.status_code if vars.auditMode == "false" else "Audit only"
            }|}
        - key: fullResponse
          value: '{|steps.executeAction.result|}'
outputs:
  - key: apiStatus
    value: '{|vars.apiStatus|}'
  - key: fullResponse
    value: '{|vars.fullResponse|}'
layout:
  elements:
    - id: executeAction
      position:
        x: -405
        'y': -295
      links:
        - sourceId: START_dumpVars
          sourcePort: bottom
          targetPort: top
          vertices: []
      image_id: d9964796-cce9-47f7-a14a-f422384e2095
    - id: END_dumpVars
      position:
        x: -405
        'y': -135
      links:
        - sourceId: vars1
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: START_dumpVars
      position:
        x: -405
        'y': -380
      links: []
    - id: vars1
      position:
        x: -405
        'y': -215
      links:
        - sourceId: executeAction
          sourcePort: bottom
          targetPort: top
          vertices: []
