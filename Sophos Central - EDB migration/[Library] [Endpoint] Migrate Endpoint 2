---
variables:
  - type: String
    name: JWT Token
    key: jwtToken
    required: true
    visible: true
    default: false
    description: |-
      This is the access token required to query the Sophos Central API.

      This is acquired in the "Sophos Central Auth & whoami" pipeline "get_token" step and passed to this pipeline.
  - type: String
    name: Output File
    key: outputFile
    required: true
    visible: true
    default: false
    description: |-
      The specific endpoint output file being processed by the current iteration of this pipeline.

      This is passed by the parent pipeline, which loops through all available output files.
    value: '{|each.item|}'
  - type: String
    name: Debug
    key: debug
    value: '{|vars.debug|}'
    required: true
    visible: true
    default: true
    description: 'Inherited from parent pipeline and If true, will enable debugs in this and all child pipelines for troubleshooting during runs.'
  - type: String
    name: Audit Mode
    key: auditMode
    value: '{|vars.auditMode|}'
    required: true
    visible: true
    default: true
    description: |-
      When enabled, any final action taken by the pipeline will not be run.

      This is primarily for proof of concept testing and development, but can be used for verification prior to a destructive action.

      Off by default
  - type: String
    name: Source Tenant ID
    key: srcTenantID
    required: false
    visible: true
    default: false
  - type: String
    name: Destination Tenant ID
    key: dstTenantID
    required: false
    visible: true
    default: false
  - type: String
    name: Migration Job ID
    key: migrationID
    required: false
    visible: true
    default: false
steps:
  - id: END_dumpVars
    name: 'End [Migrate 2]'
    type: debug
    depends:
      - checkMigrationStatus
    properties:
      message: '{|vars | dump(2)|}'
    condition: '{|vars.debug == "true"|}'
  - id: START_dumpVars
    name: 'Start [Migrate 2]'
    type: debug
    depends: []
    properties:
      message: '{|vars | dump(2)|}'
    condition: '{|vars.debug == "true"|}'
  - id: checkMigrationStatus
    name: '[Library] [Endpoint] Endpoint Action'
    type: pipeline
    depends:
      - START_dumpVars
    properties:
      pipeline_id: 63cef472980e48b584748c5c
      pipeline_revision_id: latest
      variables:
        jwtToken: '{|vars.jwtToken|}'
        fullUrl: '{|read_file(''tenants.json'') | parse_json() | json_query(''[?id==`''+vars.srcTenantID+''`].apiRegion | [0]'')+"/endpoint/v1/migrations/" + vars.migrationID + "/endpoints"|}'
        tenantID: '{|vars.srcTenantID|}'
        endpointID: 'null'
        hostName: 'null'
        tenantName: '{|read_file(''tenants.json'') | parse_json() | json_query(''[?id==`''+each.item.tenant.id+''`].tenantName | [0]'')|}'
        httpSuccessCode: 200
        httpApiMethod: GET
        debug: '{|vars.debug|}'
        auditMode: '{|vars.auditMode|}'
outputs:
  - key: apiStatus
    value: '{|steps.triggerMigration.results|}'
  - key: migrationID
    value: '{|steps.triggerMigration.result.outputs.fullResponse.body.id|}'
  - key: successfulEndpoints
    value: '{|steps.checkMigrationStatus.result.outputs.fullResponse.body | json_query(''items[?status==\''pending\''].id'')|}'
  - key: fullResponse
    value: '{|steps.checkMigrationStatus.result.outputs.fullResponse.body|}'
layout:
  elements:
    - id: END_dumpVars
      position:
        x: -405
        'y': -135
      links:
        - sourceId: checkMigrationStatus
          sourcePort: bottom
          targetPort: top
          vertices: []
    - id: START_dumpVars
      position:
        x: -405
        'y': -295
      links: []
    - id: checkMigrationStatus
      position:
        x: -405
        'y': -215
      links:
        - sourceId: START_dumpVars
          sourcePort: bottom
          targetPort: top
          vertices: []
      icon_name: book
